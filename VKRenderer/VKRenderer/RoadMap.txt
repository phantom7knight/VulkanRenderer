//============================================
//Vulkan Renderer Project Plans
//============================================



----------------------------------------------
Current Pipeline plans
----------------------------------------------

1.	Implement Uniform Buffers -Done
2.	Add Texture through Resource Loader
3.	Generate Shaders through Resource Loader and integrate generation of ByteCode. - Done
4.	Make Model Loader.
5.	Generate Scene Heirarchy.
6.	Generalize Graphics/Compute Pipeline addition to the Command Buffers
7.	Integrate UI into the engine as a seperate static lib preferably Ant-Tweak Bar.
8.	Implement Lighting in scene Phong and BRDF(also explore into UE's method).
9.	Implement Point Lights and also Line Light[Look into the article "http://www.elopezr.com/rendering-line-lights/"]
10. Implement HDR Skymap/Skydome.
11. Text Rendering
12. Reading Framebuffers getting familiar with it[See Sascha Willems's post]
12. Bump Mapping
13. Shadows Basic
14. Implement Pipeline cache









----------------------------------------------
Tentative Project Plans
----------------------------------------------

1.	Make Post Processing Pipeline
2.	Vulkan Ray Tracing
3.	Deferred Shading
4.	FXAA or TXAA
5.	Shadows Advanced
6.	Implement Compute Shaders		[Implement some simulation	]
7.	Implement Geometry Shader		[ ""		""		""		]
8.	Implement Tesselation Shader	[ ""		""		""		]
9.	Reflection
10. Offscreen Rendering[Look at Sascha Willems example]
11. Culling Techniques










