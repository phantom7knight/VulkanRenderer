<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{96E093C3-40EE-4A75-AFE5-DA0403352DF9}</ProjectGuid>
    <RootNamespace>VKRenderer</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(SolutionDir)Dependencies\Vulkan\Include;$(SolutionDir)\Dependencies\STB;$(SolutionDir)Dependencies\ASSIMP\Include;$(IncludePath)</IncludePath>
    <LibraryPath>$(SolutionDir)Dependencies\assimp\Lib;$(LibraryPath)</LibraryPath>
    <SourcePath>$(SourcePath)</SourcePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(SolutionDir)Dependencies\Vulkan\Include;$(SolutionDir)\Dependencies\STB;$(SolutionDir)Dependencies\ASSIMP\Include;$(VC_IncludePath);$(WindowsSDK_IncludePath)</IncludePath>
    <LibraryPath>$(SolutionDir)Dependencies\assimp\Lib;$(LibraryPath)</LibraryPath>
    <SourcePath>$(SourcePath)</SourcePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <AdditionalIncludeDirectories>$(SolutionDIr)\Dependencies\GLFW\include;C:\VulkanSDK\1.1.106.0\Include;$(SolutionDIr)\Dependencies\GLM\glm\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <PostBuildEvent>
      <Command>xcopy Shaders  "$(OutDir)\Shaders\"   /s /e /y /i</Command>
      <Message>Copying Shaders folder to the Output Directory</Message>
    </PostBuildEvent>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)\Dependencies\GLFW\lib-vc2017;C:\VulkanSDK\1.1.106.0\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <AdditionalIncludeDirectories>$(VULKAN_SDK)\Include;$(SolutionDIr)\Dependencies\GLFW\include;$(SolutionDIr)\Dependencies\GLM\glm\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DisableSpecificWarnings>
      </DisableSpecificWarnings>
    </ClCompile>
    <PostBuildEvent>
      <Command>
      </Command>
      <Message>Copying Shaders folder to the Output Directory</Message>
    </PostBuildEvent>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)\Dependencies\GLFW\lib-vc2017;$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Lib>
      <AdditionalOptions>-L assimp.lib %(AdditionalOptions)</AdditionalOptions>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <AdditionalIncludeDirectories>$(SolutionDIr)\Dependencies\GLFW\include;C:\VulkanSDK\1.1.106.0\Include;$(SolutionDIr)\Dependencies\GLM\glm\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>$(SolutionDir)\Dependencies\GLFW\lib-vc2017;C:\VulkanSDK\1.1.106.0\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>xcopy Shaders  "$(OutDir)\Shaders\"   /s /e /y /i</Command>
      <Message>Copying Shaders folder to the Output Directory</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <AdditionalIncludeDirectories>$(SolutionDir)Dependencies\Vulkan\Include;$(SolutionDIr)\Dependencies\GLFW\include;$(SolutionDIr)\Dependencies\GLM\glm\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DisableSpecificWarnings>
      </DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>$(SolutionDir)\Dependencies\GLFW\lib-vc2017;$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;winmm.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
      <Message>Copying Shaders folder to the Output Directory</Message>
    </PostBuildEvent>
    <Lib>
      <AdditionalOptions>-L assimp.lib %(AdditionalOptions)</AdditionalOptions>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\Common\Graphics\Material.cpp" />
    <ClCompile Include="Core\Application\Application.cpp" />
    <ClCompile Include="Core\Camera\Camera.cpp" />
    <ClCompile Include="Core\PCH\stdafx.cpp" />
    <ClCompile Include="Core\RendererVulkan\Renderer\vkRenderer.cpp" />
    <ClCompile Include="Core\ResourceLoading\ResourceLoader.cpp" />
    <ClCompile Include="Core\Threading\thread_pool_test.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\Common\Graphics\Material.h" />
    <ClInclude Include="Core\Application\Application.h" />
    <ClInclude Include="Core\Camera\Camera.h" />
    <ClInclude Include="Core\Helper\Constants\Constans.hpp" />
    <ClInclude Include="Core\Helper\Timer\BenchmarkHelper.hpp" />
    <ClInclude Include="Core\Helper\Validation Layer\ValidationLayer.hpp" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\callbacklist.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\EventCPPIncludes.hpp" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\eventdispatcher.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\eventpolicies.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\eventqueue.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\hetercallbacklist.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\hetereventdispatcher.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\hetereventqueue.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\internal\eventpolicies_i.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\internal\eventqueue_i.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\internal\hetercallbacklist_i.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\internal\typeutil_i.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\mixins\mixinfilter.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\mixins\mixinheterfilter.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\anyid.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\argumentadapter.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\conditionalfunctor.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\conditionalremover.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\counterremover.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\eventmaker.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\eventutil.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\orderedqueuelist.h" />
    <ClInclude Include="Core\ObserverModels\EventCallbacks\utilities\scopedremover.h" />
    <ClInclude Include="Core\ObserverModels\SignalSlot\sigslot\adapter\boost.hpp" />
    <ClInclude Include="Core\ObserverModels\SignalSlot\sigslot\adapter\qt.hpp" />
    <ClInclude Include="Core\ObserverModels\SignalSlot\sigslot\signal.hpp" />
    <ClInclude Include="Core\PCH\stdafx.h" />
    <ClInclude Include="Core\RendererVulkan\Renderer\vkRenderer.h" />
    <ClInclude Include="Core\RendererVulkan\VulkanHelper\VulkanHelper.hpp" />
    <ClInclude Include="Core\ResourceLoading\ResourceLoader.h" />
    <ClInclude Include="Core\Threading\thread_pool.hpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>